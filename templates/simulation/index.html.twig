{# templates/simulation/form.html.twig #}

{% extends 'base.html.twig' %}

{% block title %}Simulateur de peinture{% endblock %}

{% block content %}
    <div class="title-car">
         <h1 class="title-colors-cars">CALCULEZ FACILEMENT LA QUANTITE DE PEINTURE DONT VOUS AVEZ BESOIN !</h1>
    </div>
    <div style="color: #666; font-size: 12px" class="text-cars">
            Désormais, calculez facilement la quantité de peinture "pure" (non diluée) dont vous avez besoin pour repeindre la carrosserie de votre véhicule.
            Sélectionnez les différents éléments de carrosserie (aile, capot, coffre, pare-chocs etc.) que vous souhaitez repeindre afin d'afficher la quantité de peinture dont vous avez besoin.
    </div>
    <hr>
{# récupere less type de cars  #}
     <div class="step">
     <span class="step-numbre">1</span>
     <span class="step-text">Choisissez votre véhicule :</span>

     </div>
    <div class="car-images">
        {% for carType in carTypes %}
            <div class="car-image " data-car-type="{{carType.id}}">
                <img src="/uploads/{{ carType.illustration }}" alt="{{ carType.name }}" class="car-img">
                <p class="text-image-car">{{ carType.name }}</p>
            </div>
        {% endfor %}
    </div>
    <hr>
    {# récupere les options a repeindre  #}
    <div class="step" id="stepDeux">
            <span class="step-numbre">2</span>
            <span class="step-text">Choisissez vos éléments à repeindre</span>
            <span>(Max 4 ÉLÉMENTS) :</span>
    </div>

<div class="container-options">
   <div class="row">
                <div class="options-container col-lg-6">
                    {% for option in options %}
                    <div class="option" data-option-id="{{ option.id }}">
                        <span>{{ option.name }}</span>
                    </div>
                    {% endfor %}
                </div>

                     {# Rendu les résultas de recherche  #}
                <div class=" data-result col-lg-6">
                    <h5>Résultas :</h5>
                    <p style="text-align:center">Quantité théorique de peinture "pure" (non diluée) conseiller pour repeindre dans des conditions normales*.</p>
                        <div class="row">
                            <div class=" img-data col-lg-4">
                                <img src={{asset('assets/img/pistolePeinture.png')}} alt="POT" class="img-bombe">
                                <p>Quantité en pot**(en gramme) :
                                        <b>
                                            <span id="estimationPot">{{ estimationPot }}</span> à <span id="estimationPotMax">{{ estimationPotMax }}</span> 
                                        </b>
                                </p>
                            </div>
                            <div class="img-data col-lg-4" id ="margin-bombe">
                            <img src={{asset('assets/img/bombe-de-peinture.png')}} alt="Bombe"  class="img-bombe">
                                <p>Quantité en bombe :
                                            <b> 
                                                <span id="estimationBombe">                                
                                                    {{ estimationBombe }}   
                                                </span>
                                            </b>
                                </p>
                            </div>
                        </div>     

                        {# Bytton de repeat cher une nouvelle fois #}
                             <a style="text-decoration:none" href={{path("simulation")}}>
                                <button class="buttonn">
                                    <svg class="svg-icon" fill="none" height="20" viewBox="0 0 20 20" width="20" xmlns="http://www.w3.org/2000/svg"><g stroke="#ff342b" stroke-linecap="round" stroke-width="1.5"><path d="m3.33337 10.8333c0 3.6819 2.98477 6.6667 6.66663 6.6667 3.682 0 6.6667-2.9848 6.6667-6.6667 0-3.68188-2.9847-6.66664-6.6667-6.66664-1.29938 0-2.51191.37174-3.5371 1.01468"></path><path d="m7.69867 1.58163-1.44987 3.28435c-.18587.42104.00478.91303.42582 1.0989l3.28438 1.44986"></path></g></svg>
                                    <span class="lablee">Recommencer</span>
                                </button> 
                            </a>              
                </div>
         </div>
    </div>
                
        <hr>


        <div class="calculate-container">
        <span class="step-numbre">3</span>
        <button id="calculate-button" class="btn-calculate" disabled>                   
                   CALCULER !
        </div>
{% endblock %}

{% block script %}
<script>

var selectedCarType = null;
var selectedOptions = [];


$(document).ready(function() {
    $('.car-image').click(function() {
        $('.car-image').removeClass('selected'); // Retire la classe 'selected' de toutes les images
        $(this).addClass('selected'); // Ajoute la classe 'selected' à l'image cliquée

        selectedCarType = $(this).data('car-type'); // Récupère le numéro du modèle de voiture associé à l'image
        console.log(selectedCarType);
    });

$(document).ready(function() {

    // Gestionnaire d'événement pour le survol des options
    $('.option').hover(
        function() {
            $(this).css('background-color', '#6fb93a;');
        },
        function() {
            if (!$(this).hasClass('selected')) {
                $(this).css('background-color', '');
            }
        }
    );

    // Gestionnaire d'événement pour la sélection des options
    $('.option').click(function() {
        var optionId = $(this).data('option-id');

        // Vérifier si l'option est déjà sélectionnée
        if ($(this).hasClass('selected')) {
            // Désélectionner l'option
            $(this).removeClass('selected');
            selectedOptions.splice(selectedOptions.indexOf(optionId), 1);
        } else {
            // Vérifier si le nombre maximal d'options est déjà sélectionné
            if (selectedOptions.length >= 4) {
                alert('Vous ne pouvez sélectionner que 4 options au maximum.');
                return;
            }
            // Sélectionner l'option
            $(this).addClass('selected');
            selectedOptions.push(optionId);
        }

        // Activer ou désactiver le bouton de calcul en fonction du nombre d'options sélectionnées
        if (selectedOptions.length >= 1) {
            $('.btn-calculate').prop('disabled', false);
        } else {
            $('.btn-calculate').prop('disabled', true);
        }

        console.log(selectedOptions);
    });
});



    $('#calculate-button').click(function() {
        if (selectedCarType !== null && selectedOptions.length > 0) {
            // Envoi de la valeur sélectionnée au contrôleur Symfony via AJAX
            $.ajax({
                url: "{{ path('simulation')}}", // L'URL du contrôleur Symfony
                type: "POST",
                data: { 
                        carType: selectedCarType,
                        selectedOptions: selectedOptions 
                        }, // Les données à envoyer au contrôleur
                success: function(response) {
                    // Traitez la réponse du contrôleur Symfony ici si nécessaire
                    $('#estimationPot').text(response.estimationPot);
                    $('#estimationBombe').text(response.estimationBombe);
                    $('#estimationPotMax').text(response.estimationPotMax);
                    $('#estimationBombeMax').text(response.estimationBombeMax);
                    console.log(response);
                },
                error: function() {
                    console.error("est marche pas ");
                }
            });
        } else {
            console.log('Aucun type de voiture sélectionné.');
        }
    });

});
</script>
{% endblock %}